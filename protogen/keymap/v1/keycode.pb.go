// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        (unknown)
// source: keymap/v1/keycode.proto

package keymapv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// KeyCode represents a standard key code.
// https://www.usb.org/sites/default/files/documents/hut1_12v2.pdf page 53 show keyboard
type KeyCode int32

const (
	// Unspecified key code.
	KeyCode_KEY_CODE_UNSPECIFIED KeyCode = 0
	// Letters
	// The 'A' key.
	KeyCode_A KeyCode = 1
	// The 'B' key.
	KeyCode_B KeyCode = 2
	// The 'C' key.
	KeyCode_C KeyCode = 3
	// The 'D' key.
	KeyCode_D KeyCode = 4
	// The 'E' key.
	KeyCode_E KeyCode = 5
	// The 'F' key.
	KeyCode_F KeyCode = 6
	// The 'G' key.
	KeyCode_G KeyCode = 7
	// The 'H' key.
	KeyCode_H KeyCode = 8
	// The 'I' key.
	KeyCode_I KeyCode = 9
	// The 'J' key.
	KeyCode_J KeyCode = 10
	// The 'K' key.
	KeyCode_K KeyCode = 11
	// The 'L' key.
	KeyCode_L KeyCode = 12
	// The 'M' key.
	KeyCode_M KeyCode = 13
	// The 'N' key.
	KeyCode_N KeyCode = 14
	// The 'O' key.
	KeyCode_O KeyCode = 15
	// The 'P' key.
	KeyCode_P KeyCode = 16
	// The 'Q' key.
	KeyCode_Q KeyCode = 17
	// The 'R' key.
	KeyCode_R KeyCode = 18
	// The 'S' key.
	KeyCode_S KeyCode = 19
	// The 'T' key.
	KeyCode_T KeyCode = 20
	// The 'U' key.
	KeyCode_U KeyCode = 21
	// The 'V' key.
	KeyCode_V KeyCode = 22
	// The 'W' key.
	KeyCode_W KeyCode = 23
	// The 'X' key.
	KeyCode_X KeyCode = 24
	// The 'Y' key.
	KeyCode_Y KeyCode = 25
	// The 'Z' key.
	KeyCode_Z KeyCode = 26
	// Numbers
	// The '0' key on the main keyboard.
	KeyCode_DIGIT_0 KeyCode = 27
	// The '1' key on the main keyboard.
	KeyCode_DIGIT_1 KeyCode = 28
	// The '2' key on the main keyboard.
	KeyCode_DIGIT_2 KeyCode = 29
	// The '3' key on the main keyboard.
	KeyCode_DIGIT_3 KeyCode = 30
	// The '4' key on the main keyboard.
	KeyCode_DIGIT_4 KeyCode = 31
	// The '5' key on the main keyboard.
	KeyCode_DIGIT_5 KeyCode = 32
	// The '6' key on the main keyboard.
	KeyCode_DIGIT_6 KeyCode = 33
	// The '7' key on the main keyboard.
	KeyCode_DIGIT_7 KeyCode = 34
	// The '8' key on the main keyboard.
	KeyCode_DIGIT_8 KeyCode = 35
	// The '9' key on the main keyboard.
	KeyCode_DIGIT_9 KeyCode = 36
	// Modifiers
	// The Caps Lock key.
	KeyCode_CAPS_LOCK KeyCode = 40
	// The Shift key.
	KeyCode_SHIFT KeyCode = 41
	// The Function key.
	KeyCode_FUNCTION KeyCode = 42
	// The Control key.
	KeyCode_CONTROL KeyCode = 43
	// The Option (or Alt) key.
	KeyCode_OPTION KeyCode = 44
	// The Command key.
	KeyCode_COMMAND KeyCode = 45
	// The right Command key.
	KeyCode_RIGHT_COMMAND KeyCode = 46
	// The right Option (or Alt) key.
	KeyCode_RIGHT_OPTION KeyCode = 47
	// The right Control key.
	KeyCode_RIGHT_CONTROL KeyCode = 48
	// The right Shift key.
	KeyCode_RIGHT_SHIFT KeyCode = 49
	// Miscellaneous
	// The Return (or Enter) key.
	KeyCode_RETURN KeyCode = 50
	// The backslash key.
	KeyCode_BACKSLASH KeyCode = 51
	// The backtick (or grave accent) key.
	KeyCode_BACKTICK KeyCode = 52
	// The comma key.
	KeyCode_COMMA KeyCode = 53
	// The equal key.
	KeyCode_EQUAL KeyCode = 54
	// The minus key.
	KeyCode_MINUS KeyCode = 55
	// The plus key.
	KeyCode_PLUS KeyCode = 56
	// The period key.
	KeyCode_PERIOD KeyCode = 57
	// The quote key.
	KeyCode_QUOTE KeyCode = 58
	// The semicolon key.
	KeyCode_SEMICOLON KeyCode = 59
	// The slash key.
	KeyCode_SLASH KeyCode = 60
	// The spacebar.
	KeyCode_SPACE KeyCode = 61
	// The Tab key.
	KeyCode_TAB KeyCode = 62
	// The left bracket key.
	KeyCode_LEFT_BRACKET KeyCode = 63
	// The right bracket key.
	KeyCode_RIGHT_BRACKET KeyCode = 64
	// The Page Up key.
	KeyCode_PAGE_UP KeyCode = 65
	// The Page Down key.
	KeyCode_PAGE_DOWN KeyCode = 66
	// The Home key.
	KeyCode_HOME KeyCode = 67
	// The End key.
	KeyCode_END KeyCode = 68
	// The up arrow key.
	KeyCode_UP_ARROW KeyCode = 69
	// The right arrow key.
	KeyCode_RIGHT_ARROW KeyCode = 70
	// The down arrow key.
	KeyCode_DOWN_ARROW KeyCode = 71
	// The left arrow key.
	KeyCode_LEFT_ARROW KeyCode = 72
	// The Escape key.
	KeyCode_ESCAPE KeyCode = 73
	// The Delete (or Backspace) key.
	KeyCode_DELETE KeyCode = 74
	// The forward delete key.
	KeyCode_FORWARD_DELETE KeyCode = 76
	// The Insert/Help(on Mac) key.
	KeyCode_INSERT_OR_HELP KeyCode = 77
	// The Mute key.
	KeyCode_MUTE KeyCode = 78
	// The Volume Up key.
	KeyCode_VOLUME_UP KeyCode = 79
	// The Volume Down key.
	KeyCode_VOLUME_DOWN KeyCode = 80
	// Function keys
	// The F1 key.
	KeyCode_F1 KeyCode = 90
	// The F2 key.
	KeyCode_F2 KeyCode = 91
	// The F3 key.
	KeyCode_F3 KeyCode = 92
	// The F4 key.
	KeyCode_F4 KeyCode = 93
	// The F5 key.
	KeyCode_F5 KeyCode = 94
	// The F6 key.
	KeyCode_F6 KeyCode = 95
	// The F7 key.
	KeyCode_F7 KeyCode = 96
	// The F8 key.
	KeyCode_F8 KeyCode = 97
	// The F9 key.
	KeyCode_F9 KeyCode = 98
	// The F10 key.
	KeyCode_F10 KeyCode = 99
	// The F11 key.
	KeyCode_F11 KeyCode = 100
	// The F12 key.
	KeyCode_F12 KeyCode = 101
	// The F13 key.
	KeyCode_F13 KeyCode = 102
	// The F14 key.
	KeyCode_F14 KeyCode = 103
	// The F15 key.
	KeyCode_F15 KeyCode = 104
	// The F16 key.
	KeyCode_F16 KeyCode = 105
	// The F17 key.
	KeyCode_F17 KeyCode = 106
	// The F18 key.
	KeyCode_F18 KeyCode = 107
	// The F19 key.
	KeyCode_F19 KeyCode = 108
	// The F20 key.
	KeyCode_F20 KeyCode = 109
	// Numpad
	// The '0' key on the numeric keypad.
	KeyCode_NUMPAD_0 KeyCode = 120
	// The '1' key on the numeric keypad.
	KeyCode_NUMPAD_1 KeyCode = 121
	// The '2' key on the numeric keypad.
	KeyCode_NUMPAD_2 KeyCode = 122
	// The '3' key on the numeric keypad.
	KeyCode_NUMPAD_3 KeyCode = 123
	// The '4' key on the numeric keypad.
	KeyCode_NUMPAD_4 KeyCode = 124
	// The '5' key on the numeric keypad.
	KeyCode_NUMPAD_5 KeyCode = 125
	// The '6' key on the numeric keypad.
	KeyCode_NUMPAD_6 KeyCode = 126
	// The '7' key on the numeric keypad.
	KeyCode_NUMPAD_7 KeyCode = 127
	// The '8' key on the numeric keypad.
	KeyCode_NUMPAD_8 KeyCode = 128
	// The '9' key on the numeric keypad.
	KeyCode_NUMPAD_9 KeyCode = 129
	// The Clear key on the numeric keypad.
	KeyCode_NUMPAD_CLEAR KeyCode = 130
	// The decimal point key on the numeric keypad.
	KeyCode_NUMPAD_DECIMAL KeyCode = 131
	// The divide key on the numeric keypad.
	KeyCode_NUMPAD_DIVIDE KeyCode = 132
	// The Enter key on the numeric keypad.
	KeyCode_NUMPAD_ENTER KeyCode = 133
	// The equals key on the numeric keypad.
	KeyCode_NUMPAD_EQUALS KeyCode = 134
	// The minus key on the numeric keypad.
	KeyCode_NUMPAD_MINUS KeyCode = 135
	// The multiply key on the numeric keypad.
	KeyCode_NUMPAD_MULTIPLY KeyCode = 136
	// The plus key on the numeric keypad.
	KeyCode_NUMPAD_PLUS KeyCode = 137
	// The insert key on the numeric keypad.
	KeyCode_NUMPAD_INSERT KeyCode = 138
)

// Enum value maps for KeyCode.
var (
	KeyCode_name = map[int32]string{
		0:   "KEY_CODE_UNSPECIFIED",
		1:   "A",
		2:   "B",
		3:   "C",
		4:   "D",
		5:   "E",
		6:   "F",
		7:   "G",
		8:   "H",
		9:   "I",
		10:  "J",
		11:  "K",
		12:  "L",
		13:  "M",
		14:  "N",
		15:  "O",
		16:  "P",
		17:  "Q",
		18:  "R",
		19:  "S",
		20:  "T",
		21:  "U",
		22:  "V",
		23:  "W",
		24:  "X",
		25:  "Y",
		26:  "Z",
		27:  "DIGIT_0",
		28:  "DIGIT_1",
		29:  "DIGIT_2",
		30:  "DIGIT_3",
		31:  "DIGIT_4",
		32:  "DIGIT_5",
		33:  "DIGIT_6",
		34:  "DIGIT_7",
		35:  "DIGIT_8",
		36:  "DIGIT_9",
		40:  "CAPS_LOCK",
		41:  "SHIFT",
		42:  "FUNCTION",
		43:  "CONTROL",
		44:  "OPTION",
		45:  "COMMAND",
		46:  "RIGHT_COMMAND",
		47:  "RIGHT_OPTION",
		48:  "RIGHT_CONTROL",
		49:  "RIGHT_SHIFT",
		50:  "RETURN",
		51:  "BACKSLASH",
		52:  "BACKTICK",
		53:  "COMMA",
		54:  "EQUAL",
		55:  "MINUS",
		56:  "PLUS",
		57:  "PERIOD",
		58:  "QUOTE",
		59:  "SEMICOLON",
		60:  "SLASH",
		61:  "SPACE",
		62:  "TAB",
		63:  "LEFT_BRACKET",
		64:  "RIGHT_BRACKET",
		65:  "PAGE_UP",
		66:  "PAGE_DOWN",
		67:  "HOME",
		68:  "END",
		69:  "UP_ARROW",
		70:  "RIGHT_ARROW",
		71:  "DOWN_ARROW",
		72:  "LEFT_ARROW",
		73:  "ESCAPE",
		74:  "DELETE",
		76:  "FORWARD_DELETE",
		77:  "INSERT_OR_HELP",
		78:  "MUTE",
		79:  "VOLUME_UP",
		80:  "VOLUME_DOWN",
		90:  "F1",
		91:  "F2",
		92:  "F3",
		93:  "F4",
		94:  "F5",
		95:  "F6",
		96:  "F7",
		97:  "F8",
		98:  "F9",
		99:  "F10",
		100: "F11",
		101: "F12",
		102: "F13",
		103: "F14",
		104: "F15",
		105: "F16",
		106: "F17",
		107: "F18",
		108: "F19",
		109: "F20",
		120: "NUMPAD_0",
		121: "NUMPAD_1",
		122: "NUMPAD_2",
		123: "NUMPAD_3",
		124: "NUMPAD_4",
		125: "NUMPAD_5",
		126: "NUMPAD_6",
		127: "NUMPAD_7",
		128: "NUMPAD_8",
		129: "NUMPAD_9",
		130: "NUMPAD_CLEAR",
		131: "NUMPAD_DECIMAL",
		132: "NUMPAD_DIVIDE",
		133: "NUMPAD_ENTER",
		134: "NUMPAD_EQUALS",
		135: "NUMPAD_MINUS",
		136: "NUMPAD_MULTIPLY",
		137: "NUMPAD_PLUS",
		138: "NUMPAD_INSERT",
	}
	KeyCode_value = map[string]int32{
		"KEY_CODE_UNSPECIFIED": 0,
		"A":                    1,
		"B":                    2,
		"C":                    3,
		"D":                    4,
		"E":                    5,
		"F":                    6,
		"G":                    7,
		"H":                    8,
		"I":                    9,
		"J":                    10,
		"K":                    11,
		"L":                    12,
		"M":                    13,
		"N":                    14,
		"O":                    15,
		"P":                    16,
		"Q":                    17,
		"R":                    18,
		"S":                    19,
		"T":                    20,
		"U":                    21,
		"V":                    22,
		"W":                    23,
		"X":                    24,
		"Y":                    25,
		"Z":                    26,
		"DIGIT_0":              27,
		"DIGIT_1":              28,
		"DIGIT_2":              29,
		"DIGIT_3":              30,
		"DIGIT_4":              31,
		"DIGIT_5":              32,
		"DIGIT_6":              33,
		"DIGIT_7":              34,
		"DIGIT_8":              35,
		"DIGIT_9":              36,
		"CAPS_LOCK":            40,
		"SHIFT":                41,
		"FUNCTION":             42,
		"CONTROL":              43,
		"OPTION":               44,
		"COMMAND":              45,
		"RIGHT_COMMAND":        46,
		"RIGHT_OPTION":         47,
		"RIGHT_CONTROL":        48,
		"RIGHT_SHIFT":          49,
		"RETURN":               50,
		"BACKSLASH":            51,
		"BACKTICK":             52,
		"COMMA":                53,
		"EQUAL":                54,
		"MINUS":                55,
		"PLUS":                 56,
		"PERIOD":               57,
		"QUOTE":                58,
		"SEMICOLON":            59,
		"SLASH":                60,
		"SPACE":                61,
		"TAB":                  62,
		"LEFT_BRACKET":         63,
		"RIGHT_BRACKET":        64,
		"PAGE_UP":              65,
		"PAGE_DOWN":            66,
		"HOME":                 67,
		"END":                  68,
		"UP_ARROW":             69,
		"RIGHT_ARROW":          70,
		"DOWN_ARROW":           71,
		"LEFT_ARROW":           72,
		"ESCAPE":               73,
		"DELETE":               74,
		"FORWARD_DELETE":       76,
		"INSERT_OR_HELP":       77,
		"MUTE":                 78,
		"VOLUME_UP":            79,
		"VOLUME_DOWN":          80,
		"F1":                   90,
		"F2":                   91,
		"F3":                   92,
		"F4":                   93,
		"F5":                   94,
		"F6":                   95,
		"F7":                   96,
		"F8":                   97,
		"F9":                   98,
		"F10":                  99,
		"F11":                  100,
		"F12":                  101,
		"F13":                  102,
		"F14":                  103,
		"F15":                  104,
		"F16":                  105,
		"F17":                  106,
		"F18":                  107,
		"F19":                  108,
		"F20":                  109,
		"NUMPAD_0":             120,
		"NUMPAD_1":             121,
		"NUMPAD_2":             122,
		"NUMPAD_3":             123,
		"NUMPAD_4":             124,
		"NUMPAD_5":             125,
		"NUMPAD_6":             126,
		"NUMPAD_7":             127,
		"NUMPAD_8":             128,
		"NUMPAD_9":             129,
		"NUMPAD_CLEAR":         130,
		"NUMPAD_DECIMAL":       131,
		"NUMPAD_DIVIDE":        132,
		"NUMPAD_ENTER":         133,
		"NUMPAD_EQUALS":        134,
		"NUMPAD_MINUS":         135,
		"NUMPAD_MULTIPLY":      136,
		"NUMPAD_PLUS":          137,
		"NUMPAD_INSERT":        138,
	}
)

func (x KeyCode) Enum() *KeyCode {
	p := new(KeyCode)
	*p = x
	return p
}

func (x KeyCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (KeyCode) Descriptor() protoreflect.EnumDescriptor {
	return file_keymap_v1_keycode_proto_enumTypes[0].Descriptor()
}

func (KeyCode) Type() protoreflect.EnumType {
	return &file_keymap_v1_keycode_proto_enumTypes[0]
}

func (x KeyCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use KeyCode.Descriptor instead.
func (KeyCode) EnumDescriptor() ([]byte, []int) {
	return file_keymap_v1_keycode_proto_rawDescGZIP(), []int{0}
}

var File_keymap_v1_keycode_proto protoreflect.FileDescriptor

const file_keymap_v1_keycode_proto_rawDesc = "" +
	"\n" +
	"\x17keymap/v1/keycode.proto\x12\tkeymap.v1*\xf3\n" +
	"\n" +
	"\aKeyCode\x12\x18\n" +
	"\x14KEY_CODE_UNSPECIFIED\x10\x00\x12\x05\n" +
	"\x01A\x10\x01\x12\x05\n" +
	"\x01B\x10\x02\x12\x05\n" +
	"\x01C\x10\x03\x12\x05\n" +
	"\x01D\x10\x04\x12\x05\n" +
	"\x01E\x10\x05\x12\x05\n" +
	"\x01F\x10\x06\x12\x05\n" +
	"\x01G\x10\a\x12\x05\n" +
	"\x01H\x10\b\x12\x05\n" +
	"\x01I\x10\t\x12\x05\n" +
	"\x01J\x10\n" +
	"\x12\x05\n" +
	"\x01K\x10\v\x12\x05\n" +
	"\x01L\x10\f\x12\x05\n" +
	"\x01M\x10\r\x12\x05\n" +
	"\x01N\x10\x0e\x12\x05\n" +
	"\x01O\x10\x0f\x12\x05\n" +
	"\x01P\x10\x10\x12\x05\n" +
	"\x01Q\x10\x11\x12\x05\n" +
	"\x01R\x10\x12\x12\x05\n" +
	"\x01S\x10\x13\x12\x05\n" +
	"\x01T\x10\x14\x12\x05\n" +
	"\x01U\x10\x15\x12\x05\n" +
	"\x01V\x10\x16\x12\x05\n" +
	"\x01W\x10\x17\x12\x05\n" +
	"\x01X\x10\x18\x12\x05\n" +
	"\x01Y\x10\x19\x12\x05\n" +
	"\x01Z\x10\x1a\x12\v\n" +
	"\aDIGIT_0\x10\x1b\x12\v\n" +
	"\aDIGIT_1\x10\x1c\x12\v\n" +
	"\aDIGIT_2\x10\x1d\x12\v\n" +
	"\aDIGIT_3\x10\x1e\x12\v\n" +
	"\aDIGIT_4\x10\x1f\x12\v\n" +
	"\aDIGIT_5\x10 \x12\v\n" +
	"\aDIGIT_6\x10!\x12\v\n" +
	"\aDIGIT_7\x10\"\x12\v\n" +
	"\aDIGIT_8\x10#\x12\v\n" +
	"\aDIGIT_9\x10$\x12\r\n" +
	"\tCAPS_LOCK\x10(\x12\t\n" +
	"\x05SHIFT\x10)\x12\f\n" +
	"\bFUNCTION\x10*\x12\v\n" +
	"\aCONTROL\x10+\x12\n" +
	"\n" +
	"\x06OPTION\x10,\x12\v\n" +
	"\aCOMMAND\x10-\x12\x11\n" +
	"\rRIGHT_COMMAND\x10.\x12\x10\n" +
	"\fRIGHT_OPTION\x10/\x12\x11\n" +
	"\rRIGHT_CONTROL\x100\x12\x0f\n" +
	"\vRIGHT_SHIFT\x101\x12\n" +
	"\n" +
	"\x06RETURN\x102\x12\r\n" +
	"\tBACKSLASH\x103\x12\f\n" +
	"\bBACKTICK\x104\x12\t\n" +
	"\x05COMMA\x105\x12\t\n" +
	"\x05EQUAL\x106\x12\t\n" +
	"\x05MINUS\x107\x12\b\n" +
	"\x04PLUS\x108\x12\n" +
	"\n" +
	"\x06PERIOD\x109\x12\t\n" +
	"\x05QUOTE\x10:\x12\r\n" +
	"\tSEMICOLON\x10;\x12\t\n" +
	"\x05SLASH\x10<\x12\t\n" +
	"\x05SPACE\x10=\x12\a\n" +
	"\x03TAB\x10>\x12\x10\n" +
	"\fLEFT_BRACKET\x10?\x12\x11\n" +
	"\rRIGHT_BRACKET\x10@\x12\v\n" +
	"\aPAGE_UP\x10A\x12\r\n" +
	"\tPAGE_DOWN\x10B\x12\b\n" +
	"\x04HOME\x10C\x12\a\n" +
	"\x03END\x10D\x12\f\n" +
	"\bUP_ARROW\x10E\x12\x0f\n" +
	"\vRIGHT_ARROW\x10F\x12\x0e\n" +
	"\n" +
	"DOWN_ARROW\x10G\x12\x0e\n" +
	"\n" +
	"LEFT_ARROW\x10H\x12\n" +
	"\n" +
	"\x06ESCAPE\x10I\x12\n" +
	"\n" +
	"\x06DELETE\x10J\x12\x12\n" +
	"\x0eFORWARD_DELETE\x10L\x12\x12\n" +
	"\x0eINSERT_OR_HELP\x10M\x12\b\n" +
	"\x04MUTE\x10N\x12\r\n" +
	"\tVOLUME_UP\x10O\x12\x0f\n" +
	"\vVOLUME_DOWN\x10P\x12\x06\n" +
	"\x02F1\x10Z\x12\x06\n" +
	"\x02F2\x10[\x12\x06\n" +
	"\x02F3\x10\\\x12\x06\n" +
	"\x02F4\x10]\x12\x06\n" +
	"\x02F5\x10^\x12\x06\n" +
	"\x02F6\x10_\x12\x06\n" +
	"\x02F7\x10`\x12\x06\n" +
	"\x02F8\x10a\x12\x06\n" +
	"\x02F9\x10b\x12\a\n" +
	"\x03F10\x10c\x12\a\n" +
	"\x03F11\x10d\x12\a\n" +
	"\x03F12\x10e\x12\a\n" +
	"\x03F13\x10f\x12\a\n" +
	"\x03F14\x10g\x12\a\n" +
	"\x03F15\x10h\x12\a\n" +
	"\x03F16\x10i\x12\a\n" +
	"\x03F17\x10j\x12\a\n" +
	"\x03F18\x10k\x12\a\n" +
	"\x03F19\x10l\x12\a\n" +
	"\x03F20\x10m\x12\f\n" +
	"\bNUMPAD_0\x10x\x12\f\n" +
	"\bNUMPAD_1\x10y\x12\f\n" +
	"\bNUMPAD_2\x10z\x12\f\n" +
	"\bNUMPAD_3\x10{\x12\f\n" +
	"\bNUMPAD_4\x10|\x12\f\n" +
	"\bNUMPAD_5\x10}\x12\f\n" +
	"\bNUMPAD_6\x10~\x12\f\n" +
	"\bNUMPAD_7\x10\x7f\x12\r\n" +
	"\bNUMPAD_8\x10\x80\x01\x12\r\n" +
	"\bNUMPAD_9\x10\x81\x01\x12\x11\n" +
	"\fNUMPAD_CLEAR\x10\x82\x01\x12\x13\n" +
	"\x0eNUMPAD_DECIMAL\x10\x83\x01\x12\x12\n" +
	"\rNUMPAD_DIVIDE\x10\x84\x01\x12\x11\n" +
	"\fNUMPAD_ENTER\x10\x85\x01\x12\x12\n" +
	"\rNUMPAD_EQUALS\x10\x86\x01\x12\x11\n" +
	"\fNUMPAD_MINUS\x10\x87\x01\x12\x14\n" +
	"\x0fNUMPAD_MULTIPLY\x10\x88\x01\x12\x10\n" +
	"\vNUMPAD_PLUS\x10\x89\x01\x12\x12\n" +
	"\rNUMPAD_INSERT\x10\x8a\x01B\x9d\x01\n" +
	"\rcom.keymap.v1B\fKeycodeProtoP\x01Z9github.com/xinnjie/watchbeats/protogen/keymap/v1;keymapv1\xa2\x02\x03KXX\xaa\x02\tKeymap.V1\xca\x02\tKeymap\\V1\xe2\x02\x15Keymap\\V1\\GPBMetadata\xea\x02\n" +
	"Keymap::V1b\x06proto3"

var (
	file_keymap_v1_keycode_proto_rawDescOnce sync.Once
	file_keymap_v1_keycode_proto_rawDescData []byte
)

func file_keymap_v1_keycode_proto_rawDescGZIP() []byte {
	file_keymap_v1_keycode_proto_rawDescOnce.Do(func() {
		file_keymap_v1_keycode_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_keymap_v1_keycode_proto_rawDesc), len(file_keymap_v1_keycode_proto_rawDesc)))
	})
	return file_keymap_v1_keycode_proto_rawDescData
}

var file_keymap_v1_keycode_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_keymap_v1_keycode_proto_goTypes = []any{
	(KeyCode)(0), // 0: keymap.v1.KeyCode
}
var file_keymap_v1_keycode_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_keymap_v1_keycode_proto_init() }
func file_keymap_v1_keycode_proto_init() {
	if File_keymap_v1_keycode_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_keymap_v1_keycode_proto_rawDesc), len(file_keymap_v1_keycode_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_keymap_v1_keycode_proto_goTypes,
		DependencyIndexes: file_keymap_v1_keycode_proto_depIdxs,
		EnumInfos:         file_keymap_v1_keycode_proto_enumTypes,
	}.Build()
	File_keymap_v1_keycode_proto = out.File
	file_keymap_v1_keycode_proto_goTypes = nil
	file_keymap_v1_keycode_proto_depIdxs = nil
}
