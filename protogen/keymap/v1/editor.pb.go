// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        (unknown)
// source: keymap/v1/editor.proto

package keymapv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// EditorType represents the type of editor.
type EditorType int32

const (
	// Unspecified
	EditorType_EDITOR_TYPE_UNSPECIFIED EditorType = 0
	// Visual Studio Code
	EditorType_VSCODE               EditorType = 1
	EditorType_VSCODE_WINDSURF      EditorType = 2
	EditorType_VSCODE_WINDSURF_NEXT EditorType = 3
	EditorType_VSCODE_CURSOR        EditorType = 4
	// Zed
	EditorType_ZED EditorType = 5
	// IntelliJ
	EditorType_INTELLIJ           EditorType = 6
	EditorType_INTELLIJ_COMMUNITY EditorType = 7
	EditorType_INTELLIJ_PYCHARM   EditorType = 8
	EditorType_INTELLIJ_WEBSTORM  EditorType = 9
	EditorType_INTELLIJ_CLION     EditorType = 10
	EditorType_INTELLIJ_PHPSTORM  EditorType = 11
	EditorType_INTELLIJ_RUBYMINE  EditorType = 12
	EditorType_INTELLIJ_GOLAND    EditorType = 13
	// Helix
	EditorType_HELIX EditorType = 14
	// Vim
	EditorType_VIM EditorType = 15
)

// Enum value maps for EditorType.
var (
	EditorType_name = map[int32]string{
		0:  "EDITOR_TYPE_UNSPECIFIED",
		1:  "VSCODE",
		2:  "VSCODE_WINDSURF",
		3:  "VSCODE_WINDSURF_NEXT",
		4:  "VSCODE_CURSOR",
		5:  "ZED",
		6:  "INTELLIJ",
		7:  "INTELLIJ_COMMUNITY",
		8:  "INTELLIJ_PYCHARM",
		9:  "INTELLIJ_WEBSTORM",
		10: "INTELLIJ_CLION",
		11: "INTELLIJ_PHPSTORM",
		12: "INTELLIJ_RUBYMINE",
		13: "INTELLIJ_GOLAND",
		14: "HELIX",
		15: "VIM",
	}
	EditorType_value = map[string]int32{
		"EDITOR_TYPE_UNSPECIFIED": 0,
		"VSCODE":                  1,
		"VSCODE_WINDSURF":         2,
		"VSCODE_WINDSURF_NEXT":    3,
		"VSCODE_CURSOR":           4,
		"ZED":                     5,
		"INTELLIJ":                6,
		"INTELLIJ_COMMUNITY":      7,
		"INTELLIJ_PYCHARM":        8,
		"INTELLIJ_WEBSTORM":       9,
		"INTELLIJ_CLION":          10,
		"INTELLIJ_PHPSTORM":       11,
		"INTELLIJ_RUBYMINE":       12,
		"INTELLIJ_GOLAND":         13,
		"HELIX":                   14,
		"VIM":                     15,
	}
)

func (x EditorType) Enum() *EditorType {
	p := new(EditorType)
	*p = x
	return p
}

func (x EditorType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EditorType) Descriptor() protoreflect.EnumDescriptor {
	return file_keymap_v1_editor_proto_enumTypes[0].Descriptor()
}

func (EditorType) Type() protoreflect.EnumType {
	return &file_keymap_v1_editor_proto_enumTypes[0]
}

func (x EditorType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EditorType.Descriptor instead.
func (EditorType) EnumDescriptor() ([]byte, []int) {
	return file_keymap_v1_editor_proto_rawDescGZIP(), []int{0}
}

var File_keymap_v1_editor_proto protoreflect.FileDescriptor

const file_keymap_v1_editor_proto_rawDesc = "" +
	"\n" +
	"\x16keymap/v1/editor.proto\x12\tkeymap.v1*\xbe\x02\n" +
	"\n" +
	"EditorType\x12\x1b\n" +
	"\x17EDITOR_TYPE_UNSPECIFIED\x10\x00\x12\n" +
	"\n" +
	"\x06VSCODE\x10\x01\x12\x13\n" +
	"\x0fVSCODE_WINDSURF\x10\x02\x12\x18\n" +
	"\x14VSCODE_WINDSURF_NEXT\x10\x03\x12\x11\n" +
	"\rVSCODE_CURSOR\x10\x04\x12\a\n" +
	"\x03ZED\x10\x05\x12\f\n" +
	"\bINTELLIJ\x10\x06\x12\x16\n" +
	"\x12INTELLIJ_COMMUNITY\x10\a\x12\x14\n" +
	"\x10INTELLIJ_PYCHARM\x10\b\x12\x15\n" +
	"\x11INTELLIJ_WEBSTORM\x10\t\x12\x12\n" +
	"\x0eINTELLIJ_CLION\x10\n" +
	"\x12\x15\n" +
	"\x11INTELLIJ_PHPSTORM\x10\v\x12\x15\n" +
	"\x11INTELLIJ_RUBYMINE\x10\f\x12\x13\n" +
	"\x0fINTELLIJ_GOLAND\x10\r\x12\t\n" +
	"\x05HELIX\x10\x0e\x12\a\n" +
	"\x03VIM\x10\x0fB\x9c\x01\n" +
	"\rcom.keymap.v1B\vEditorProtoP\x01Z9github.com/xinnjie/watchbeats/protogen/keymap/v1;keymapv1\xa2\x02\x03KXX\xaa\x02\tKeymap.V1\xca\x02\tKeymap\\V1\xe2\x02\x15Keymap\\V1\\GPBMetadata\xea\x02\n" +
	"Keymap::V1b\x06proto3"

var (
	file_keymap_v1_editor_proto_rawDescOnce sync.Once
	file_keymap_v1_editor_proto_rawDescData []byte
)

func file_keymap_v1_editor_proto_rawDescGZIP() []byte {
	file_keymap_v1_editor_proto_rawDescOnce.Do(func() {
		file_keymap_v1_editor_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_keymap_v1_editor_proto_rawDesc), len(file_keymap_v1_editor_proto_rawDesc)))
	})
	return file_keymap_v1_editor_proto_rawDescData
}

var file_keymap_v1_editor_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_keymap_v1_editor_proto_goTypes = []any{
	(EditorType)(0), // 0: keymap.v1.EditorType
}
var file_keymap_v1_editor_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_keymap_v1_editor_proto_init() }
func file_keymap_v1_editor_proto_init() {
	if File_keymap_v1_editor_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_keymap_v1_editor_proto_rawDesc), len(file_keymap_v1_editor_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_keymap_v1_editor_proto_goTypes,
		DependencyIndexes: file_keymap_v1_editor_proto_depIdxs,
		EnumInfos:         file_keymap_v1_editor_proto_enumTypes,
	}.Build()
	File_keymap_v1_editor_proto = out.File
	file_keymap_v1_editor_proto_goTypes = nil
	file_keymap_v1_editor_proto_depIdxs = nil
}
